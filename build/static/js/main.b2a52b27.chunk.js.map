{"version":3,"sources":["redux/auth/authOperations.js","redux/auth/authSelectors.js","redux/contacts/contactAction.js","redux/auth/authReducer.js","redux/auth/authActions.js","redux/contacts/contactReducer.js","redux/store.js","routes.js","components/PrivateRoute.js","components/PublicRoute.js","components/userMenu/UserMenu.js","components/header/Header.js","components/App/App.js","index.js"],"names":["axios","defaults","baseURL","token","headers","common","Authorization","register","credentials","dispatch","a","authAction","registerRequest","post","result","data","registerSuccess","registerError","logIn","loginRequest","loginSuccess","loginError","logOut","logoutRequest","logoutSuccess","logoutError","getCurrentUser","getState","persistedToken","auth","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","isAuthenticated","state","getUserEmail","user","email","getContactsRequest","createAction","getContactsSuccess","getContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","handleFilter","payload","target","value","initialUserState","name","createReducer","_","error","authPersistConfig","key","storage","whiteList","combineReducers","items","contactsAction","filter","contact","id","store","configureStore","reducer","contacts","contactReducer","persistReducer","authReducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","REGISTER","PAUSE","PERSIST","PURGE","persistor","persistStore","path","label","exact","component","lazy","private","restricted","connect","authSelectors","Component","routeProps","render","props","to","avatar","onLogout","authOperations","className","src","alt","width","height","type","onClick","activeClassName","App","this","onGetCurrentUser","fallback","routes","map","route","ReactDOM","loading","document","getElementById"],"mappings":"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","file":"static/js/main.b2a52b27.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport authAction from './authActions';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nconst token = {\r\n    set(token) {\r\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n    },\r\n    unset() {\r\n        axios.defaults.headers.common.Authorization = '';\r\n    },\r\n};\r\n\r\nconst register = credentials => async dispatch => {\r\n    dispatch(authAction.registerRequest());\r\n    try {\r\n        const result = await axios.post('/users/signup', credentials);\r\n        token.set(result.data.token);\r\n        dispatch(authAction.registerSuccess(result.data));\r\n    } catch (error) {\r\n        dispatch(authAction.registerError(error));\r\n    }\r\n};\r\n\r\nconst logIn = credentials => async dispatch => {\r\n    dispatch(authAction.loginRequest());\r\n    try {\r\n        const result = await axios.post('/users/login', credentials);\r\n        token.set(result.data.token);\r\n        dispatch(authAction.loginSuccess(result.data));\r\n    } catch (error) {\r\n        dispatch(authAction.loginError(error));\r\n    }\r\n};\r\n\r\nconst logOut = () => async dispatch => {\r\n    dispatch(authAction.logoutRequest());\r\n    try {\r\n        await axios.post('/users/logout');\r\n        token.unset();\r\n        dispatch(authAction.logoutSuccess());\r\n    } catch (error) {\r\n        dispatch(authAction.logoutError(error));\r\n    }\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n    const {\r\n        auth: { token: persistedToken },\r\n    } = getState();\r\n\r\n    if (!persistedToken) {\r\n        return;\r\n    }\r\n\r\n    token.set(persistedToken);\r\n    dispatch(authAction.getCurrentUserRequest());\r\n    try {\r\n        const result = await axios.get('/users/current');\r\n        dispatch(authAction.getCurrentUserSuccess(result.data));\r\n    } catch (error) {\r\n        dispatch(authAction.getCurrentUserError(error));\r\n    }\r\n};\r\n\r\nexport default { register, logIn, logOut, getCurrentUser };","const isAuthenticated = state => state.auth.token;\r\n\r\nconst getUserEmail = state => state.auth.user.email;\r\n\r\nexport default { isAuthenticated, getUserEmail };","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst getContactsRequest = createAction('@contact/getRequest');\r\nconst getContactsSuccess = createAction('@contact/getSuccess');\r\nconst getContactsError = createAction('@contact/getError');\r\n\r\nconst addContactRequest = createAction('@contact/addRequest');\r\nconst addContactSuccess = createAction('@contact/addSuccess');\r\nconst addContactError = createAction('@contact/addError');\r\n\r\nconst deleteContactRequest = createAction('@contact/deleteRequest');\r\nconst deleteContactSuccess = createAction('@contact/deleteSuccess');\r\nconst deleteContactError = createAction('@contact/deleteError');\r\n\r\nconst handleFilter = createAction('@contact/filter', ({ target }) => ({\r\n    payload: target.value,\r\n}));\r\n\r\nexport default {\r\n    getContactsRequest,\r\n    getContactsSuccess,\r\n    getContactsError,\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n    handleFilter,\r\n};","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport authAction from './authActions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n    [authAction.registerSuccess]: (_, { payload }) => payload.user,\r\n    [authAction.loginSuccess]: (_, { payload }) => payload.user,\r\n    [authAction.logoutSuccess]: () => initialUserState,\r\n    [authAction.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n    [authAction.registerSuccess]: (_, { payload }) => payload.token,\r\n    [authAction.loginSuccess]: (_, { payload }) => payload.token,\r\n    [authAction.logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n    [authAction.registerError]: (_, { payload }) => payload,\r\n    [authAction.loginError]: (_, { payload }) => payload,\r\n    [authAction.logoutError]: (_, { payload }) => payload,\r\n    [authAction.getCurrentUserError]: (_, { payload }) => payload,\r\n});\r\n\r\nexport const authPersistConfig = {\r\n    key: 'auth',\r\n    storage,\r\n    whiteList: ['token'],\r\n};\r\n\r\nexport default combineReducers({\r\n    user,\r\n    token,\r\n    error,\r\n});","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('@auth/registerRequest');\r\nconst registerSuccess = createAction('@auth/registerSuccess');\r\nconst registerError = createAction('@auth/registerError');\r\n\r\nconst loginRequest = createAction('@auth/loginRequest');\r\nconst loginSuccess = createAction('@auth/loginSuccess');\r\nconst loginError = createAction('@auth/loginError');\r\n\r\nconst logoutRequest = createAction('@auth/logoutRequest');\r\nconst logoutSuccess = createAction('@auth/logoutSuccess');\r\nconst logoutError = createAction('@auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('@auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('@auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('@auth/getCurrentUserError');\r\n\r\nexport default {\r\n    registerRequest,\r\n    loginRequest,\r\n    logoutRequest,\r\n    getCurrentUserRequest,\r\n    registerError,\r\n    loginError,\r\n    logoutError,\r\n    getCurrentUserError,\r\n    registerSuccess,\r\n    loginSuccess,\r\n    logoutSuccess,\r\n    getCurrentUserSuccess,\r\n};","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport contactsAction from './contactAction';\r\n\r\nconst removeContact = (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload);\r\n\r\nconst items = createReducer([], {\r\n    [contactsAction.getContactsSuccess]: (_, { payload }) => payload,\r\n    [contactsAction.addContactSuccess]: (state, { payload }) => [\r\n        ...state,\r\n        payload,\r\n    ],\r\n    [contactsAction.deleteContactSuccess]: removeContact,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [contactsAction.handleFilter]: (state, { payload }) => (state = payload),\r\n});\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    REGISTER,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n} from 'redux-persist';\r\n\r\nimport contactReducer from './contacts/contactReducer';\r\nimport authReducer, { authPersistConfig } from './auth/authReducer';\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        contacts: contactReducer,\r\n        auth: persistReducer(authPersistConfig, authReducer),\r\n    },\r\n\r\n    devTools: process.env.NODE_ENV !== 'production',\r\n    middleware: getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoredActions: [FLUSH, REHYDRATE, REGISTER, PAUSE, PERSIST, PURGE],\r\n        },\r\n    }),\r\n});\r\n\r\nexport const persistor = persistStore(store);","import { lazy } from 'react';\r\n\r\nexport default [\r\n    {\r\n        path: '/',\r\n        label: 'Home',\r\n        exact: true,\r\n        component: lazy(() => import('./containers/home/Home')),\r\n        private: false,\r\n        restricted: false,\r\n    },\r\n    {\r\n        path: '/register',\r\n        label: 'Register',\r\n        exact: true,\r\n        component: lazy(() => import('./containers/register/Register')),\r\n        private: false,\r\n        restricted: true,\r\n    },\r\n    {\r\n        path: '/login',\r\n        label: 'Login',\r\n        exact: true,\r\n        component: lazy(() => import('./containers/login/Login')),\r\n        private: false,\r\n        restricted: true,\r\n    },\r\n    {\r\n        path: '/contacts',\r\n        label: 'Contacts',\r\n        exact: true,\r\n        component: lazy(() => import('./containers/contacts/Contacts')),\r\n        private: true,\r\n        restricted: false,\r\n    },\r\n];","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst PrivateRoute = ({\r\n    component: Component,\r\n    isAuthenticated,\r\n    ...routeProps\r\n}) => (\r\n    <Route\r\n        {...routeProps}\r\n        render={props =>\r\n            isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n        }\r\n    />\r\n);\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst PublicRoute = ({\r\n    component: Component,\r\n    isAuthenticated,\r\n    restricted,\r\n    ...routeProps\r\n}) => (\r\n    <Route\r\n        {...routeProps}\r\n        render={props =>\r\n            isAuthenticated && restricted ? (\r\n                <Redirect to=\"/contacts\" />\r\n            ) : (\r\n                    <Component {...props} />\r\n                )\r\n        }\r\n    />\r\n);\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\nexport default connect(mapStateToProps)(PublicRoute);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors, authOperations } from '../../redux/auth';\r\n// import './UserMenu.css';\r\n\r\nconst UserMenu = ({ avatar, email, onLogout }) => {\r\n    return (\r\n        <div className=\"avatar-wrapper\">\r\n            <div className=\"account-avatar\">\r\n                <img\r\n                    className=\"avatar avatar--hover\"\r\n                    src={avatar}\r\n                    alt=\"User avatar\"\r\n                    width=\"44\"\r\n                    height=\"44\"\r\n                />\r\n            </div>\r\n            <span className=\"account-title\">{email}</span>\r\n            <button className=\"logout-btn\" type=\"button\" onClick={onLogout}>\r\n                Logout\r\n      </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    email: authSelectors.getUserEmail(state),\r\n    avatar:\r\n        'https://img1.freepng.ru/20180519/lea/kisspng-jack-black-kung-fu-panda-showdown-of-legendary-le-5affe1a46e1027.5440406515267188844508.jpg',\r\n});\r\n\r\nexport default connect(mapStateToProps, { onLogout: authOperations.logOut })(\r\n    UserMenu,\r\n);","\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n// import { AppBar, Toolbar } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { authSelectors } from '../../redux/auth';\r\nimport UserMenu from '../userMenu/UserMenu';\r\nimport './Header.css';\r\n\r\nconst Header = ({ isAuthenticated }) => {\r\n    return (\r\n        <div className=\"header\">\r\n            {/* <AppBar position=\"static\">\r\n                <Toolbar className=\"app_header\"> */}\r\n            <NavLink\r\n                exact\r\n                to=\"/\"\r\n                className=\"navigation-link\"\r\n                activeClassName=\"navigation-link-active\"\r\n            >\r\n                Home\r\n                    </NavLink>\r\n            {isAuthenticated ? (\r\n                <>\r\n                    <NavLink\r\n                        to=\"/contacts\"\r\n                        className=\"navigation-link\"\r\n                        activeClassName=\"navigation-link-active\">\r\n                        Contacts\r\n                            </NavLink>{' '}\r\n                    <UserMenu />{' '}\r\n                </>\r\n            ) : (\r\n                    <>\r\n                        <NavLink\r\n                            to=\"/login\"\r\n                            className=\"navigation-link\"\r\n                            activeClassName=\"navigation-link-active\"\r\n                        >\r\n                            Login\r\n                            </NavLink>\r\n                        <NavLink\r\n                            to=\"/register\"\r\n                            className=\"navigation-link\"\r\n                            activeClassName=\"navigation-link-active\"\r\n                        >\r\n                            Registration\r\n                            </NavLink>\r\n                    </>\r\n                )}\r\n            {/* </Toolbar>\r\n            </AppBar> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Header);","import React, { Component, Suspense } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Switch } from 'react-router-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport routes from '../../routes';\r\nimport { authOperations } from '../../redux/auth';\r\nimport PrivateRoute from '../PrivateRoute';\r\nimport PublicRoute from '../PublicRoute';\r\nimport Header from '../header/Header';\r\n\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n    componentDidMount() {\r\n        this.props.onGetCurrentUser();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <BrowserRouter>\r\n                <Header />\r\n                <Suspense fallback={<h1>Loading...</h1>}>\r\n                    <Switch>\r\n                        {routes.map(route =>\r\n                            route.private ? (\r\n                                <PrivateRoute key={route.label} {...route} />\r\n                            ) : (\r\n                                    <PublicRoute\r\n                                        key={route.label}\r\n                                        {...route}\r\n                                        restricted={route.restricted}\r\n                                    />\r\n                                ),\r\n                        )}\r\n                    </Switch>\r\n                </Suspense>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, {\r\n    onGetCurrentUser: authOperations.getCurrentUser,\r\n})(App);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { store, persistor } from './redux/store';\r\nimport App from './components/App/App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <PersistGate loading={null} persistor={persistor}>\r\n            <App />\r\n        </PersistGate>\r\n    </Provider>,\r\n    document.getElementById('root'),\r\n);"],"sourceRoot":""}